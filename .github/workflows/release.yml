name: Create Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write
  pull-requests: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get next version
      id: version
      run: |
        # 获取最新的tag版本
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
        echo "Latest tag: $latest_tag"
        
        # 提取版本号并加1
        version=${latest_tag#v}
        IFS='.' read -r major minor patch <<< "$version"
        new_patch=$((patch + 1))
        new_version="v$major.$minor.$new_patch"
        
        echo "New version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_OUTPUT

    - name: Zip all files
      run: |
        zip -r ooxml-tools-${{ steps.version.outputs.new_version }}.zip . \
          -x ".git/*" ".github/*" "node_modules/*" "*.zip" ".gitignore"

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.new_version }}
        name: Release ${{ steps.version.outputs.new_version }}
        body: |
          自动生成的发布版本 ${{ steps.version.outputs.new_version }}
          
          包含所有文件的完整版本。
        files: ooxml-tools-${{ steps.version.outputs.new_version }}.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}